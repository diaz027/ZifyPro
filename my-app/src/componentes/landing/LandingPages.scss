html{
  background-color: black;
}

.videoH{
overflow-x: hidden;
  top: 0;
width: 100vw;
margin: 0 0 0;
  z-index: 0;
}
.layout {
  width: 100vw;
  overflow-x: visible;
  position: relative;
  z-index: 2;
}
.fixI{
  position: absolute;
  top: -2vh;
  width: 40vw;
  left: 5vw;
  color: aqua;
  animation: salto-voltereta .5s ease-out forwards;
  opacity: 1;
}
@keyframes salto-voltereta {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
.grow1 h2 {
  position: absolute;
  top: 7vh;
  left: 45%;
  text-wrap: inherit;
  max-width: 720px;
  max-height: 550px;
  overflow: hidden;
  color: rgb(240, 231, 224);
  font-size: 2em;
  animation: curtain .5s forwards;
  transform-origin: top;
}


@keyframes curtain {
  0% {
    transform: scaleY(0);
  }
  100% {
    transform: scaleY(1);
  }
}

.text{
  position: relative;
  z-index: 1;
  margin-left: 5vw;
  margin-top: 10vh;
  width: 90vw;
  height: 75vh;
  background: rgba(6, 6, 6, 0.35);
backdrop-filter: blur( 2.5px );
-webkit-backdrop-filter: blur( 1.5px );
border-radius: 10px;
border: 1px solid rgba( 255, 255, 255, 0.18 );
}


/* 
** Change this if you need to modify
** the amount of lines displayed
*/
$total-lines: 6;


/*
** Leave these unless you want
** to open a whole can of worms
*/
$left-offset: 29px;
$clip-height: 5vw;
$line-height: $clip-height - 0vw;


/*
** Set up the experiment
*/





/*
** Apply styles to the parent element
*/
.Words {
  position: absolute;
  left: 45vw;
  top: -5vh;
  width: 40vw;
  color:white;
  margin: 0 auto;
  padding: 80px 0;
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  font-size: 5vw;
  font-weight: 900;
  letter-spacing: 5px;
  text-transform: uppercase;
  // Sort out nasty text fuzz
  transform: rotateZ(3deg) translate3d(0, 0, 0);
  -webkit-font-smoothing: antialiased;
  -webkit-font-kerning: normal;
  -webkit-text-size-adjust: 42vw;
}


/*
** Apply common styles to each line of text
*/
.Words-line {
  height: $clip-height;
  overflow: hidden;
  position: relative;
  
  // Change the perspective of each alternating line
  &:nth-child(odd) {
    transform: skew(45deg, -2.4deg) scaleY(.96667) rotateX(6deg);
    color: tomato;
  }
  &:nth-child(even) {
    transform: skew(0deg, -3.4deg) scaleY(1.33333)rotateX(-20deg);
    color: rgb(233, 163, 2);
  }
  
  // Loop over the total lines and apply a left offset
  @for $i from 1 through $total-lines+1 {
    &:nth-child(#{$i}) {
      left: $left-offset * $i;
    }
  }
}


/*
** Fine-grained text styles
*/
p {
  height: $clip-height;
  line-height: $line-height;
  padding: 0 10px;
  transition: all .4s ease-in-out;
  transform: translate3d(0, 0, 0);
  vertical-align: top;
  white-space: nowrap;
}


/*
** The hover interaction
*/
.Words:hover {
  p {
    transform: translate3d(0, -($clip-height), 0);
  }
}

@media only screen and (max-width: 600px) {


  .text{
    position: relative;
    margin: 0;
    margin-left: 5vw;
    margin-top: 6vh;
    width: 90vw;
  }


  .fixI{
    overflow-x: hidden;

    position: absolute;
    top: -2vh;
    width: 40vh;
    left: 5vw;
    animation: salto-voltereta .5s ease-out forwards;
  }

  .videoH{
    overflow-x: hidden;

    position: absolute;
    top: 35vh;
    left: -20.5vw;
  transform: rotateZ(90deg) scale(2.5);
  margin: 0 0 0;
    z-index: 0;
  }

  .Words{
    overflow-x: hidden;

    letter-spacing: 5px;

    transform: scale(2.1) rotateZ(3deg);
    left: 23vw;
    top: 35vh;
    font-size: 20px;
  }
  .Words-line {
    
    // Loop over the total lines and apply a left offset
    @for $i from 1 through $total-lines+1 {
      &:nth-child(#{$i}) {
        left: .5vh * $i;
      }
    }
  }

}
